#ident	"@(#)mk::mk.addon	1.1.3.1"

echo ""
echo ""
echo "			Copyright (c) 1987, 1988 AT&T"
echo "			  All Rights Reserved"
echo ""
echo "          THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T"
echo "       The copyright notice above does not evidence any actual or"
echo "               intended publication of such source code."
echo ""
echo ""
echo ""
echo ${0}: started at `date`

MAKE=${MAKE:-make}
SLBASE=${ROOT}
export SLBASE

#	If we are in a cross compilation environment then use cross compiler
if [ "$ROOT" != "" ]
then
	if u3b2 || u3b5
	then
		AS=m32as	export AS
		CC=m32cc	export CC
		LD=m32ld	export LD
	fi
	if i286
	then
		AS=i286as	export AS
		CC=i286cc	export CC
		LD=i286ld	export LD
	fi
	if i386
	then
		AS=i386as	export AS
		CC=i386cc	export CC
		LD=i386ld	export LD
	fi
	echo "You are in a cross compilation environment."
	PATH=$ROOT/xenv:$PATH
	echo ROOT="${ROOT}"
else
	AS=as	export AS
	CC=cc	export CC
	LD=ld	export LD
fi

#
# Perform object stamping if MCS variable is set in shell env
#

case "${MCS}" in

	mcs)
		MCS=mcs		export MCS
		if i386
		then
			TARGET=${TARGET:=i386}		export TARGET
			RELEASE=${RELEASE:=unk}		export RELEASE
			LOAD="${LOAD}"			export LOAD
			COMMENT="UNIX System V/386 Release 4.0 $LOAD"
			export COMMENT
		else
			echo "The proper variables have not been set in ${0}."
			echo "No mcs will be performed."
			MCS=""
		fi
		echo "Comment sections will be modified using ${MCS}."
		echo "The following string will replace the existing contents:"
		echo "${COMMENT} <name of add-on>"
		break
		;;

	pstamp)
		if i386
		then
			PRODUCT=${PRODUCT:=386unix}	export PRODUCT
			TARGET=${TARGET:=i386}		export TARGET
			RELEASE=${RELEASE:=unk}		export RELEASE
			LOAD="${LOAD}"			export LOAD
			if [ -z "${LOAD}" ]
			then
				echo "The LOAD variable was not set."
				echo "No pstamping will be performed."
				MCS=""
			else
				LOAD=`echo ${LOAD} | tr "[a-z]" "[A-Z]"`
				COMMENT="-p ${PRODUCT} -t ${TARGET} -r ${RELEASE} -l ${LOAD}"
				export COMMENT
				echo "PRODUCT=${PRODUCT}"
				echo "RELEASE=${RELEASE}"
				echo "TARGET=${TARGET}"
				echo "LOAD=${LOAD}"
				echo "Objects will be pstamped."
			fi
		else
			echo "The proper variables have not been set in ${0}."
			echo "No pstamping will be performed."
			MCS=""
		fi
		break
		;;

	*)
		echo "Null or unknown MCS variable passed to ${0}."
		echo "Object comment sections will remain unchanged."
		break
		;;
esac


#	Insure that only one machine type is valid
#	Note: the redirection is needed to handle the possibility
#	      of a nonexistent file in the $MACH machine list

MACH="vax pdp11 u3b2 u3b u3b5 i286 i386"
(truecnt=0
for mach in $MACH
do
	`$mach`
	if [ $? -eq 0 ]
	then
		truecnt=`expr $truecnt + 1`
	fi
done
if [ $truecnt -ne 1 ]
then
	echo ":${0}: **** Only one of the following machine types can"
	echo "		be true: $MACH"
	exit 1
fi ) 2>/dev/null

CCSTYPE=${CCSTYPE:-ELF}; export CCSTYPE
if i286
then
	ldlibs=
elif [ x$CCSTYPE = xELF ]
then
	shlibs=${SHLIBS:-""}
	noshlibs=${NOSHLIBS:-"-dn"}
	perflibs=${PERFLIBS:-$noshlibs}
	rootlibs=${ROOTLIBS:-$noshlibs}
else
	shlibs=${SHLIBS:-"-lc_s"}
	noshlibs=${NOSHLIBS:-""}
	perflibs=${PERFLIBS:-$shlibs}
	rootlibs=${ROOTLIBS:-$shlibs}
fi

if [ "$SYMLINK" = "" ]
then
	RELEASE=`uname -r | cut -c1-3`
	if [ $RELEASE -lt 4.0 ]
	then
		SYMLINK=":"
	fi
fi
symlink=${SYMLINK:-"ln -s"}

cd ${ROOT}/usr/src/add-on
#
# check out the BUS type
VPIX=VPIX
MERGE386=MERGE386
while [ $# -ge 1 ]
do
case "$1" in
BUS*) shift;;
ARC*) shift;;
VPIX|vpix) VPIX=VPIX; shift;;
NOVPIX|novpix) VPIX="" ; shift;;
MERGE386|merge386) MERGE386=MERGE386; shift;;
NOMERGE386|nomerge386) MERGE386="" ; shift ;;
*) break;;
esac
done
BUS=${BUS:-AT386}; export BUS
ARCH=${ARCH:-AT386}; export ARCH
BTYPE="BUS=$BUS"; export BTYPE
ATYPE="ARCH=$ARCH"; export ATYPE
DFLGS="$VPIX $MERGE386"; export DFLGS

if [ $# = 0 ]
then
	ADDONS="*"
else
	ADDONS="$*"
fi

echo "Press <DEL> if not correct.  You have 30 seconds to kill this build."
echo "I am PID $$."
sleep 30 ; echo ""
for addon in ${ADDONS}
do
   if [ ! -f ${addon}/prototype ]
   then
	cd ${addon}
	echo "======== ${addon}"
	${MAKE} -b -f ${addon}.mk ${BTYPE} ${ATYPE} ROOTLIBS='$rootlibs' PERFLIBS='$perflibs' NOSHLIBS='$noshlibs' SHLIBS='$shlibs' SYMLINK='$symlink' FRC=FRC DFLGS='$DFLGS' install
	if [ $? -ne 0 ]
	then
		echo "******** Build of ${addon} add-on FAILED"
	else
		if [ ! -z "${MCS}" ]
		then
			echo "-------- Modifying comment section for ${addon}"
			if [ ! -d pkg ]
			then
				echo "WARNING: No object stamping done for ${addon}."
			else
				cd pkg
				for file in `find . -type f -print | grep -v Makefile`
				do
					if ` file ${file} | egrep "executable|archive|relocatable" >/dev/null 2>&1 `
					then
						if [ "${MCS}" = "mcs" ]
						then
							echo mcs -d -a "@(#)${COMMENT} ${addon}:${file}" ${file}
							mcs -d -a "@(#)${COMMENT} ${addon}:${file}" ${file} > /dev/null 2>&1
							if ` file ${file} | grep "archive" >/dev/null 2>&1 `
							then
								echo "ar ts ${file} > /dev/null 2>&1"
								ar ts ${file} > /dev/null 2>&1
							fi
						fi
						if [ "${MCS}" = "pstamp" ]
						then
							echo pstamp ${COMMENT} ${file}
							pstamp ${COMMENT} ${file}
						fi
					fi
				done
				cd ..
			fi
		fi
	fi
	${MAKE} -b -f ${addon}.mk ${BTYPE} ${ATYPE} ROOTLIBS='$rootlibs' PERFLIBS='$perflibs' NOSHLIBS='$noshlibs' SHLIBS='$shlibs' SYMLINK='$symlink' DFLGS='$DFLGS' package
	${MAKE} -b -f ${addon}.mk ${BTYPE} ${ATYPE} ROOTLIBS='$rootlibs' PERFLIBS='$perflibs' NOSHLIBS='$noshlibs' SHLIBS='$shlibs' SYMLINK='$symlink' DFLGS='$DFLGS' clobber
	cd ..
   fi
done

echo ${0}: done at `date`
