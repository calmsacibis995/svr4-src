#ident	"@(#)oamintf:usermgmt/Form.password	1.2.6.1"

################################################################################
#	Module Name:  Form.password
################################################################################
Form="(Re-)Defines User Password Information"

framemsg=`readfile $INTFBASE/form.msg`

help=OPEN TEXT $INTFBASE/Text.itemhelp $LININFO

done=`message -w "(Re-)Defining Password Information";

	if [ "$F2" = "lock" -o "$F2" = "no password" ];
	then
		pswdchk $F1 $F2 $F3 $F4 $F5;

		if [ $RET -eq 0 ];
		then
			set -l CMD="OPEN TEXT $OBJ_DIR/Text.pswdok $F1";
		else
	    		set -l CMD="OPEN TEXT $OBJ_DIR/Text.pswdnok";
		fi;

	elif [ "$F2" = "new password" -o "$F2" = "password" ];
	then
		run -n pswddef $F1;

		if [ $RET -eq 0 ];
		then
			pswdchk $F1 $F2 $F3 $F4 $F5;

			if [ $RET -eq 0 ];
			then
				set -l CMD="OPEN TEXT $OBJ_DIR/Text.pswdok $F1";
			else
	    			set -l CMD="OPEN TEXT $OBJ_DIR/Text.pswdnok";
			fi;
		else
	    		set -l CMD="OPEN TEXT $OBJ_DIR/Text.pswdnok";
		fi;

	fi`$CMD `getfrm`


# F1
name="User login:"
lininfo=Form.password:login
nrow=1
ncol=3
frow=1
fcol=15
rows=1
columns=8

rmenu=OPEN MENU $OBJ_DIR/Menu.passwd
valid=`fmlgrep "^$F1:" /etc/passwd`
invalidmsg=const 'ERROR: Must be an existing user login'

# F2
name=Password status:
lininfo=Form.password:pswdstat
nrow=2
ncol=3
frow=2
fcol=20
rows=1
columns=12

rmenu={ "lock" "new password" "no password" "password" }
menuonly=true

value=`indicator -w "";passwd -s "$F1" | sed -n -e "s/^[^ ]*[ ]*\([^ ]*\)[ ].*/\1/p" | regex 'PS' 'password' 'LK' 'lock' 'NP' 'no password'`

invalidmsg=const 'ERROR: Status available: lock, new password, no password, password.'
choicemsg=const "Select password status for login."

# F3
name=Maximum number of days the password is valid:
lininfo=Form.password:maximum
nrow=3
ncol=3
frow=3
fcol=49
rows=1
columns=8

value=`getval -x  "$F1"`
valid=`valint "$F3"`

invalidmsg=`errint`

# F4
name=Minimum number of days allowed between password changes:
lininfo=Form.password:minimum
nrow=4
ncol=3
frow=4
fcol=60
rows=1
value=0
columns=8

value=`getval -n  "$F1"`
valid=`/usr/sadm/bin/valint "$F4" || regex -v "$F4" '^[ ]*$' && shell " if [ \"$F4\" -gt \"$F3\" ]
        then
                exit 1;
        else
                exit 0;
        fi"`
invalidmsg=const "Invalid number or the number is greater than the maximum number of days."

#  $F5
name=Number of days for warning message:
lininfo=Form.password:warn
nrow=5
ncol=3
frow=5
fcol=39
rows=1
columns=8

value=`passwd -s $F1 | sed -n -e "s/^.*[       ]\([^ ]*\).*/\1/p"`
valid=`/usr/sadm/bin/valint $F5 && shell " if [ \"$F5\" -gt \"$F3\" ]
        then
                exit 1;
        else
                exit 0;
        fi"`
invalidmsg=const "Invalid number or the number is greater than the maximum number of days."

name=RESET
button=8
action=RESET
