#ident	"@(#)oamintf:softwaremgmt/check/Form.orig	1.2.2.3"

form="Check Against Original Media"
help=OPEN TEXT $INTFBASE/Text.itemhelp $LININFO
framemsg="`readfile $INTFBASE/form.msg`"

`readfile $INTFBASE/frept.msg | set -l MSG2`
`set -l PKGBIN=/usr/sadm/install/bin`

done=`
	message -w ;
	run sh -c "
		$OBJ_DIR/task.orig \"$F1\" \"$F2\" \"$F3\" \"$F4\" \"$F5\" \"$F6\" \"$F7\" \"$F8\" \"$F9\"
	";
	message -f $MSG2;
	echo FALSE
`

name=Location of the original package:
lininfo=locorig
scroll=TRUE
nrow=1
ncol=2
frow=1
fcol=37
rows=1
columns=18
value=spool
rmenu={ `getdev 'mountpt:*' 'norewind:*' 'pathname:*'` }
choicemsg=Select location of original package and press ENTER.
valid=`
	message -w ;
	if [ -z $F1 ] ;
	then
		set -l DEVTYPE="" ;
		echo FALSE ;
	elif [ $F1 = spool ] || valpath -aoy $F1 ;
	then
		set -l DEVTYPE="online" ;
	elif devattr $F1 mountpt || devattr $F1 norewind ;
	then
		set -l DEVTYPE="offline" ;
	else
		set -l DEVTYPE="" ;
		echo FALSE ;
	fi
`
invalidmsg=Error - must be an absolute directory/device pathname, or valid device alias.

name=Package identifier(s) to check:
lininfo=pkgid
scroll=TRUE
multiselect=TRUE
nrow=2
ncol=2
frow=2
fcol=35
rows=1
columns=20
value=all
rmenu=vary ` 
	if [ $DEVTYPE = online ] ;
	then
		set -l CMD="OPEN MENU $OBJ_DIR/../Menu.pkg -d$F1" ;
	else
		set -l CMD="" ;
	fi`$CMD
choicemsg=vary `
	message -w ;
	if [ $DEVTYPE = offline ] ;
	then
		echo "No choices available for off-line devices" ;
	else
		if [ $DEVTYPE = online ] ;
		then
			$OBJ_DIR/../pkg $F1 ;
			if [ $RET = 1 ];
			then
				echo "MARK the items you want and press ENTER to select them." ;
			else
				echo "No choices available" ;
			fi ;
		else
			echo "No choices available" ;
		fi ;
	fi ;
`
valid=`
	message -w;
	if [ -z $F2 ] ;
	then
		echo FALSE ;
	else 
		if [ $DEVTYPE = online ] ;
		then
			shell "	
				for arg in \`echo \"$F2\" | sed 's/,/ /g'\`
				do
					$OBJ_DIR/../pkg $F1 \"\$arg\" >/dev/null 2>&1 
					if [ \"\$?\" -eq 0 ]
					then
						exit 1
					fi
				done
				exit 0
			" ;
		else
			echo TRUE ;
		fi ;
	fi
`
invalidmsg=Error - invalid package instance identifier.

name=Pathname(s) to check:
lininfo=pathnm
scroll=TRUE
nrow=3
ncol=2
frow=3
fcol=25
rows=1
columns=30
value=all
choicemsg=Enter specific pathname(s) to check (if desired) or keyword \"all\".
valid=`
	message -w;
	shell "	
		[ -z \"$F3\" ] && exit 1
		[ "$F3" = all ] && exit 0
		for arg in \`echo \"$F3\" | sed 's/,/ /g'\`
		do
			valpath -a \"\$arg\" && continue
			exit 1
		done
	"
`
invalidmsg=Error - input must be a list of absolute pathnames.

name=Check for attribute consistency?
lininfo=attr
nrow=5
ncol=10
frow=5
fcol=2
rows=1
columns=3
value=yes
rmenu={ yes no }
menuonly=TRUE

name=Check for content consistency?
lininfo=cont
nrow=6
ncol=10
frow=6
fcol=2
rows=1
columns=3
value=yes
rmenu={ yes no }
menuonly=TRUE

name=Check for hidden files?
lininfo=hidden
nrow=7
ncol=10
frow=7
fcol=2
rows=1
columns=3
value=no
rmenu={ yes no }
menuonly=TRUE

name=Correct all detected inconsistencies?
lininfo=fix
nrow=8
ncol=10
frow=8
fcol=2
rows=1
columns=3
value=no
rmenu={ yes no }
menuonly=TRUE

name=Check files which are likely to have changed?
lininfo=volatile
nrow=9
ncol=10
frow=9
fcol=2
rows=1
columns=3
value=no
rmenu={ yes no }
menuonly=TRUE

name=Display each pathname as it is verified?
lininfo=verbose
nrow=10
ncol=10
frow=10
fcol=2
rows=1
columns=3
value=yes
rmenu={ yes no }
menuonly=TRUE

name=RESET
button=8
action=reset
