#ident	"@(#)devintf:devices/remove/Form.remove	1.4"

form="Remove a Device"
help=OPEN TEXT $INTFBASE/Text.itemhelp $LININFO
lifetime=longterm
begrow=any
begcol=any
framemsg=`readfile $INTFBASE/form.msg`

init=`
    getdev | set -l DEVLIST ;
    if [ "$DEVLIST" ] ;
    then set -l OK=TRUE ;
    else set -l OK=FALSE ;
	 message "There are no device to remove." ;
    fi ;
`$OK

done=`
    indicator -w "" ;
    getfrm | set -l FRAMENUM ;
    putdev -d $F1 ;
    if [ $RET -eq 0 ] ;
    then set -l ENDMSG="The device \"$F1\" was successfully removed from the device tables." ;
    elif [ $RET -eq 3 ] ;
    then set -l ENDMSG="The device \"$F1\" could not be found in the device tables." ;
    else set -l ENDMSG="Internal error $RET" ;
    fi;
    indicator "" ;
`OPEN TEXT $OBJ_DIR/Text.c_remove "$ENDMSG"

name="Device: "
lininfo="Form.remove:Device"
nrow=1
ncol=1
frow=1
fcol=9
rows=1
columns=14
invalidmsg=$INVMSG
valid=`
    indicator -w "" ;
    if [ "$F1" ] ;
    then
	regex -v "$F1" '^[-._$a-zA-Z0-9]+$' 'TRUE' '.*' 'FALSE' | set -l VALID ;
	if [ "$VALID" = "TRUE" ] ;
	then
	    devattr $F1 alias >/dev/null ;
	    if [ $RET -ne 0 ] ;
	    then set -l INVMSG="The device alias \"$F1\" is not defined." ;
		 set -l VALID=FALSE ;
	    fi ;
	else set -l INVMSG="The value \"$F1\" is not a valid device alias." ;
	fi ;
    else
	set -l INVMSG="This field may not be blank." ;
	set -l VALID=FALSE ;
    fi;
    indicator "" ;
`$VALID
rmenu=vary { `
    indicator -w "" ;
    getdev ;
    indicator "" ;
` }

name=RESET
button=8
action=reset
