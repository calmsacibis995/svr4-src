#ident	"@(#)devintf:groups/mbrship/remove/Form.remove	1.3"

form="Remove a Member"
help=OPEN TEXT $INTFBASE/Text.itemhelp $LININFO
lifetime=longterm
begrow=any
begcol=any
framemsg=`readfile $INTFBASE/form.msg`

init=`
    getdgrp | set -l DEVGRPS ;
    if [ "$DEVGRPS" ] ;
    then set -l OK=TRUE ;
    else
	set -l OK=FALSE ;
	message "There are no device groups currently defined." ;
    fi ;
`$OK

done=`
    indicator -w "";
    getfrm | set -l FRAMENUM ;
    putdgrp -d "$F1" "$F2" ;
    if [ $RET -eq 0 ] ;
    then set -l ENDMSG="The group member \"$F2\" was successfully removed from the device group \"$F1\"." ;
    elif [ $RET -eq 2 ] ;
    then set -l ENDMSG="Unable to open or create device tables." ;
    elif [ $RET -eq 3 ] ;
    then set -l ENDMSG="The device group \"$F1\" could not be found and could not be modified." ;
    elif [ $RET -eq 4 ] ;
    then set -l ENDMSG="The device group \"$F1\" does not contain the member \"$F2\"." ;
    else set -l ENDMSG="Internal error $RET" ;
    fi ;
    indicator "";
`OPEN TEXT $OBJ_DIR/Text.c_remove "$ENDMSG"

name="Device Group Name:"
lininfo="Form.remove:Name"
nrow=1
ncol=1
frow=1
fcol=20
rows=1
columns=14
invalidmsg=$INVMSG
valid=`
    indicator -w "" ;
    if [ -z "$F1" ] ;
    then
	set -l VALID=FALSE ;
	set -l INVMSG="This field may not be blank." ;
    else
	regex -v "$F1" '^[-.$_a-zA-Z0-9]+$' 'TRUE' '.*' 'FALSE' | set -l VALID ;
	if [ "$VALID" = "TRUE" ] ;
	then
	    listdgrp $F1 | set -l MEMBERS ;
	    if [ $RET -eq 0 ] ;
	    then
		echo "$MEMBERS" | wc -l | tr -d ' ' | set -l NMEMS ;
		if [ $NMEMS -eq 0 ] ;
		then
		    set -l VALID=FALSE ;
		    set -l INVMSG="The device group \"$F1\" contains no members." ;
		fi ;
	    else
		if [ $RET -eq 3 ] ;
		then set -l INVMSG="The device group \"$F1\" does not exist." ;
		else set -l INVMSG="Internal error $RET" ;
		fi ;
		set -l VALID=FALSE ;
	    fi ;
	else
	    set -l INVMSG="The value \"$F1\" is not a valid device group name." ;
	fi ;
    fi ;
    indicator "" ;
`$VALID
rmenu={ `
    indicator -w "" ;
    echo $DEVGRPS | tr ' ' '\012' | sort ;
    indicator "" ;
` }

name="Member:"
lininfo="Form.remove:Member"
nrow=2
ncol=1
frow=2
fcol=20
rows=1
columns=14
scroll=TRUE
invalidmsg=$INVMSG
valid=`
    indicator -w "" ;
    if [ -z "$F2" ] ;
    then
	set -l VALID=FALSE ;
	set -l INVMSG="This field may not be blank." ;
    else
	regex -v "$F2" '^[-.$_0-9a-zA-Z]+$' 'TRUE' '.*' 'FALSE' | set -l VALID ;
	if [ $VALID = "TRUE" ] ;
	then
	    $OBJ_DIR/xisinlist $F2 "$MEMBERS" ;
	    if [ $RET -ne 0 ] ;
	    then
		set -l VALID=FALSE ;
		set -l INVMSG="The device group \"$F1\" does not contain the member \"$F2\"." ;
	    fi ;
	else
	    regex -v "$F2" '^/[^ :]*$' 'TRUE' '.*' 'FALSE' | set -l VALID ;
	    if [ $VALID = "TRUE" ] ;
	    then
		$OBJ_DIR/xisinlist $F2 "$MEMBERS" ;
		if [ $RET -ne 0 ] ;
		then
		    set -l VALID=FALSE ;
		    set -l INVMSG="The device group \"$F1\" does not contain the member \"$F2\"." ;
		fi ;
	    else
		set -l INVMSG="The value \"$F2\" can not be a valid group member." ;
		set -l VALID=FALSE ;
	    fi ;
	fi ;
    fi ;
    indicator "" ;
`$VALID
rmenu=vary { `
    indicator -w "" ;
    echo $MEMBERS | tr ' ' '\012' | sort ;
    indicator "" ;
` }

name=RESET
button=8
action=reset
