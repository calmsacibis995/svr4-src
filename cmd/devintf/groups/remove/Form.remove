#ident	"@(#)devintf:groups/remove/Form.remove	1.4"

form="Remove a Device Group"
help=OPEN TEXT $INTFBASE/Text.itemhelp $LININFO
lifetime=longterm
begrow=any
begcol=any
framemsg=`readfile $INTFBASE/form.msg`

init=`
    getdgrp -l | set -l DGRPLIST ;
    if [ "$DGRPLIST" ] ;
    then
	set -l OK=TRUE ;
    else
	set -l OK=FALSE ;
	message "There are no device groups to remove." ;
    fi ;
`$OK


done=`
    indicator -w "" ;
    getfrm | set -l FRAMENUM ;
    putdgrp -d $F1 ;
    if [ $RET -eq 0 ] ;
    then
	set -l ENDMSG="The device group \"$F1\" was successfully removed." ;
    elif [ $RET -eq 3 ] ;
    then
	set -l ENDMSG="The device group \"$F1\" does not exist and could not be removed." ;
    then
	set -l ENDMSG="Internal error $RET" ;
    fi ;
    indicator "" ;
`OPEN TEXT $OBJ_DIR/Text.c_remove "$ENDMSG"

name="Device Group Name:"
lininfo="Form.remove:Name"
nrow=1
ncol=1
frow=1
fcol=20
rows=1
columns=14
invalidmsg=$INVMSG
valid=`
    indicator -w "" ;
    if [ -z "$F1" ] ;
    then
	set -l VALID=FALSE ;
	set -l INVMSG="This field may not be blank." ;
    else
	regex -v "$F1" '^[-_$.a-zA-Z0-9]+' 'TRUE' '.*' 'FALSE' | set -l VALID ;
	if [ "$VALID" = "TRUE" ] ;
	then
	    listdgrp $F1 >/dev/null ;
	    if [ $RET -ne 0 ] ;
	    then
		set -l VALID=FALSE ;
		if [ $RET -eq 3 ] ;
		then
		    set -l INVMSG="The device group \"$F1\" does not exist." ;
		else
		    set -l INVMSG="Internal error $RET" ;
		fi ;
	    fi ;
	else
	    set -l INVMSG="The value \"$F1\" is not a valid device group name." ;
	fi ;
    fi ;
    indicator "" ;
`$VALID
rmenu=vary { `
    indicator -w "" ;
    echo $DGRPLIST | tr ' ' '\012' ;
    indicator "" ;
` }

name=RESET
button=8
action=reset
